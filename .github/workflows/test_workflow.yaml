name: Build and run tests
# This workflow is triggered on pushes to the repository.
on: [push, pull_request]

jobs:
  lint:
    # This job runs on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # always uses the latest patch version.
          version: v1.48
          args: "--timeout 5m"
  test:
    # This job runs on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache kubebuilder binaries
        id: cache-kubebuilder
        uses: actions/cache@v3
        with:
          path: kubebuilder/bin
          # Use SHA-256 hash of the .kubebuilder-version file as the key.
          key: ${{ runner.os }}-kubebuilder-${{ hashFiles('.github/.kubebuilder-version') }}

      - name: Cache testbin binaries
        id: cache-testbin
        uses: actions/cache@v3
        with:
          path: testbin
          # Use SHA-256 hash of the Makefile file as the key.
          # Swapping testbinary versions usally requrie to change the Makefile
          key: ${{ runner.os }}-kubebuilder-${{ hashFiles('Makefile') }}

      # This will only run if the cache was not found.
      - name: Download kubebuilder binaries
        if: steps.cache-kubebuilder.outputs.cache-hit != 'true'
        run: |
          mkdir kubebuilder
          version="$(cat .github/.kubebuilder-version)"
          cd kubebuilder
          curl -L https://go.kubebuilder.io/dl/${version}/linux/amd64
          cd ..

      - name: Run tests and generate coverage
        run: |
          ENVTEST_K8S_VERSION=1.24.2 make test
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage results to coveralls
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage.out

      - name: Upload coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.html
